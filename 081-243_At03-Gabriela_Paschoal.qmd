---
title: "Exercícios - Controle de Qualidade"
author: "Gabriela Paschoal"
format: pdf
editor: source
---

```{r setup,echo = FALSE, results='hide',warning=FALSE, message=FALSE}

library(kableExtra)
library(qcc)
library(IQCC)

```

## Atividade 02

$S_A$

```{r, echo = FALSE, fig.align='center',fig.width=4, fig.height=3,warning=FALSE, message=FALSE}

set.seed(123)

m<-8
n<-5
mu<-1000
sigma<-4
num_simulacoes <- 1000  # número de rodadas

# Função para calcular o desvio padrão dos 8 subgrupos de tamanho 5
simular_estimacao_S_A <- function(m, n, mu, sigma) {
  # Gerar 8 subgrupos com distribuição normal
  subgrupos <- matrix(rnorm(m * n, mean = mu, sd = sigma), nrow = m, ncol = n)
  
  media<-rep(0,m)
  media_subgrupos<-rep(0,m)
  
  for (i in 1:m){
      media_subgrupos[i]<-mean(subgrupos[i,])
  }
  
  for (i in 1:m){
    for (j in 1:n){
      media_prov<-(subgrupos[i,j] - mean(media_subgrupos))^2
      media[i]<-media[i]+media_prov
    }
  }
  
  sd<-(1/IQCC::c4(m*n))*sqrt(sum(media)/(m*n-1))
  
  # Retornar a média dos desvios padrão dos subgrupos
  return(sd)
}

# Simulações
resultados <- replicate(num_simulacoes, simular_estimacao_S_A(m, n, mu, sigma))

# Análise dos resultados
media_Sa <- mean(resultados)
desvio_Sa <- sd(resultados)

# Exibir resultados
cat("Sa: Média dos desvios padrão estimados:", media_Sa, "\n")
cat("Sa: Desvio padrão dos desvios estimados:", desvio_Sa, "\n")

# Histogramas para visualização
hist(resultados, main = "S_a: Distribuição dos DPs Estimados",
     xlab = "DP Estimado", col = "lightblue", border = "black", 
     breaks = 30,freq = FALSE)

```

$S_b$

```{r, echo = FALSE, fig.align='center',fig.width=4, fig.height=3,warning=FALSE, message=FALSE}
set.seed(123)
num_simulacoes <- 1000  # número de rodadas

# Função para calcular o desvio padrão dos 8 subgrupos de tamanho 5
simular_estimacao_S_B <- function(m, n, mu, sigma) {
  # Gerar 8 subgrupos com distribuição normal
  subgrupos <- matrix(rnorm(m * n, mean = mu, sd = sigma), nrow = m, ncol = n)
  
  media_prov<-rep(0,m)
  media_subgrupos<-rep(0,m)
  
  for (i in 1:m){
      media_subgrupos[i]<-mean(subgrupos[i,])
  }
  
  for (i in 1:m){
      media_prov[i]<-(mean(subgrupos[i,]) - mean(media_subgrupos))^2
  }
  
  sd<-(1/IQCC::c4(m))*sqrt(sum(media_prov)/(m-1))*sqrt(n)
  
  # Retornar a média dos desvios padrão dos subgrupos
  return(sd)
}

# Simulações
resultados <- replicate(num_simulacoes, simular_estimacao_S_B(m, n, mu, sigma))

# Análise dos resultados
media_Sb <- mean(resultados)
desvio_Sb <- sd(resultados)

# Exibir resultados
cat("Sb: Média dos desvios padrão estimados:", media_Sb, "\n")
cat("Sb: Desvio padrão dos desvios estimados:", desvio_Sb, "\n")

# Histogramas para visualização
hist(resultados, main = "S_b: Distribuição dos DPs Estimados",
     xlab = "DP Estimado", col = "lightblue", border = "black", 
     breaks = 30, freq = FALSE)

```

$S_c$

```{r, echo = FALSE, fig.align='center',fig.width=4, fig.height=3,warning=FALSE, message=FALSE}
set.seed(123)
num_simulacoes <- 1000  # número de rodadas

# Função para calcular o desvio padrão dos 8 subgrupos de tamanho 5
simular_estimacao_S_c <- function(m, n, mu, sigma) {
  # Gerar 8 subgrupos com distribuição normal
  subgrupos <- matrix(rnorm(m * n, mean = mu, sd = sigma), nrow = m, ncol = n)
  
  sds<-apply(subgrupos,1,sd)
  
  sd<-mean(sds)/IQCC::c4(n)
  
  # Retornar a média dos desvios padrão dos subgrupos
  return(sd)
}

# Simulações
resultados <- replicate(num_simulacoes, simular_estimacao_S_c(m, n, mu, sigma))

# Análise dos resultados
media_Sc <- mean(resultados)
desvio_Sc <- sd(resultados)

# Exibir resultados
cat("Sc: Média dos desvios padrão estimados:", media_Sc, "\n")
cat("Sc: Desvio padrão dos desvios estimados:", desvio_Sc, "\n")

# Histogramas para visualização
hist(resultados, main = "S_c: Distribuição dos DPs Estimados",
     xlab = "DP Estimado", col = "lightblue", border = "black", 
     breaks = 30, freq = FALSE)

```

$S_d$

```{r, echo = FALSE, fig.align='center',fig.width=4, fig.height=3,warning=FALSE, message=FALSE}
set.seed(123)
num_simulacoes <- 1000  # número de rodadas

# Função para calcular o desvio padrão dos 8 subgrupos de tamanho 5
simular_estimacao_S_d <- function(m, n, mu, sigma) {
  # Gerar 8 subgrupos com distribuição normal
  subgrupos <- matrix(rnorm(m * n, mean = mu, sd = sigma), nrow = m, ncol = n)
  
  h<-apply(subgrupos,1,function(x)max(x)-min(x))
  
  sd<-mean(h)/IQCC::d2(n)
  
  # Retornar a média dos desvios padrão dos subgrupos
  return(sd)
}

# Simulações
resultados <- replicate(num_simulacoes, simular_estimacao_S_d(m, n, mu, sigma))

# Análise dos resultados
media_Sd <- mean(resultados)
desvio_Sd <- sd(resultados)

# Exibir resultados
cat("Sd: Média dos desvios padrão estimados:", media_Sd, "\n")
cat("Sd: Desvio padrão dos desvios estimados:", desvio_Sd, "\n")

# Histogramas para visualização
hist(resultados, main = "S_d: Distribuição dos DPs Estimados",
     xlab = "DP Estimado", col = "lightblue", border = "black", 
     breaks = 30, freq=FALSE)

```

Seguem, abaixo, as estimativas da média e do erro padrão das estimativas para $S_a$, $S_b$,$S_c$ e $S_d$. Nota-se que as médias se aproximam do valor real para o desvio do processo, e que o erro padrão para as estimativas estiveram em torno de 0,45 e 1,03.

```{r, echo = FALSE, fig.align='center',fig.width=4, fig.height=3,warning=FALSE, message=FALSE}

df<-data.frame(
  Parâmetros = c("Média", "Erro Padrão"),
  Sa = c(media_Sa,desvio_Sa),
  Sb = c(media_Sb,desvio_Sb),
  Sc = c(media_Sc,desvio_Sc),
  Sd = c(media_Sd,desvio_Sd)
)

kable(df)



```

Os histogramas para as estimativas de $S_a$, $S_b$,$S_c$ e $S_d$ apresentam, todos, distribuição gaussiana centrada em 4 (valor real do desvio-padrão estimado), com leves mudanças apenas na dispersão. Para este caso, eu escolheria o estimador $S_d$ porque ele apresenta baixo desvio-padrão e as amostras são pequenas, logo faz sentido usar a amplitude como medida de dispersão.

## Atividade 03

Considerei uma distribuição normal padrão para gerar 1000 amostras de tamanho n = 5, 1000 de tamanho n = 10 e 1000 amostras de tamanho n = 25. Com esses dados, calculei as amplitudes (R5, R10 e R25, respectivamente) e plotei os histogramas de densidade - esses se mostraram assimétricos à direita, conforme esperado. Os percentis calculados se encontram na tabela abaixo.

```{r, echo = FALSE, fig.align='center',fig.width=4, fig.height=3,warning=FALSE, message=FALSE}
set.seed(123)
n<-5
m<-1000
amostra5<-matrix(rnorm(n*m),nrow=m,ncol=n)
R5<-apply(amostra5,1,function(x)max(x)-min(x))
# amplitude relativa coincide com a amplitude comum,
#pois sigma =  1
hist(R5,freq = FALSE)

n=10
amostra10<-matrix(rnorm(n*m),nrow=m,ncol=n)
R10<-apply(amostra10,1,function(x)max(x)-min(x))
hist(R10,freq = FALSE)

n=25
amostra25<-matrix(rnorm(n*m),nrow=m,ncol=n)
R25<-apply(amostra25,1,function(x)max(x)-min(x))
hist(R25,freq = FALSE)


data.frame(
  Amostra = c("R5", "R10", "R25"),
  `95%` = c(quantile(R5,0.95), quantile(R10,0.95), quantile(R25,0.95)),
  `99%` = c(quantile(R5,0.99), quantile(R10,0.99), quantile(R25,0.99)),
  `99.7%` = c(quantile(R5,0.997), quantile(R10,0.997), quantile(R25,0.997))
  
)

```

## Atividade 04

### (a)

Uma prévia do conjunto de dados e os gráficos de controle para $\bar{X}$ e $R$ se encontram abaixo. O processo pode ser considerado sob controle se a retirada do ponto que está caindo fora dos limites deixar o novo gráfico sem pontos fora dos limites.

```{r, echo = FALSE, fig.align='center',warning=FALSE, message=FALSE}

data<-read.table("C:\\Users\\gabriela.silva\\Desktop\\faculdade\\cq\\Dados\\Tab6E.5.txt", dec=",",header=TRUE)

kable(data[1:5,])

invisible(qcc(data[,-1], type = "xbar"))
invisible(qcc(data[,-1], type = "R"))


```

### (b)

O desvio-padrão estimado para o processo ($S_d$) é de 0,00023 unidade.

```{r, echo = TRUE, fig.align='center',warning=FALSE, message=FALSE}

data$R<-apply(data[,-1],1,function(x)max(x)-min(x))
kable(data[1:5,-1])
S_d<-mean(data$R)/IQCC::d2(n)

```

### (c)

Os limites a 3 desvios-padrão da média do processo.

## Atividade 05

### (a)

```{r, echo = FALSE, fig.align='center',warning=FALSE, message=FALSE}

data<-read.table("C:\\Users\\gabriela.silva\\Desktop\\faculdade\\cq\\Dados\\Tab3.18.txt", dec=",",header=TRUE)
n   = 5
k   = 3 # 3 sigma
d2n = IQCC::d2(n)
d3n = IQCC::d3(n)

R_bar         = mean(data$R)
S_d           = R_bar/d2n
LSC_R         = S_d*(d2n+k*d3n)
LIC_R         = ifelse((d2n-k*d3n)<0,0,S_d*(d2n-k*d3n))

X_barbar   = mean(data$X_bar)
LSC_X_bar  = X_barbar + k*S_d/sqrt(n)
LIC_X_bar  = X_barbar - k*S_d/sqrt(n)

cat("Limites para X_barra: \n")
cat("LIC: ", LIC_X_bar, "\n")
cat("LM: ", X_barbar, "\n")
cat("LSC: ", LSC_X_bar,"\n")

cat("Limites para R: \n")
cat("LIC: ", LIC_R, "\n")
cat("LM: ", R_bar, "\n")
cat("LSC: ", LSC_R,"\n")


```

### (b)

A probabilidade de descobrir a mudança no gráfico de $\bar{X}$ pode ser calculada pela função poder para essa carta. O resultado deu 53% de probabilidade.

```{r, echo = TRUE, fig.align='center',warning=FALSE, message=FALSE}

delta<-(7.5-X_barbar)/S_d

# Desajuste na média

Pdx <-function(k,delta,n){
  
  Pdx<-pnorm(-k+delta*sqrt(n))+pnorm(-k-delta*sqrt(n))
  
  return(Pdx)
  
}

Pdx<-Pdx(k,delta,n)
Pdx

```
### (c)

A probabilidade de descobrirmos a mudança (deslocamento da média) com o gráfico de $\bar{X}$ antes da quarta amostra (isto é, até a terceira amostra), é dada pela função densidade da distribuição geométrica (fornecida abaixo), resultando em 6%. 

```{r, echo = TRUE, fig.align='center',warning=FALSE, message=FALSE}

pgeom(q = 3,prob = Pdx) # prob de que o numero de tentativas ate "sucesso" 
#seja menor OU IGUAL a q

```
### (d)

A probabilidade de descobrirmos a mudança com o gráfico de $\bar{R}$ é de 36%.

```{r, echo = TRUE, fig.align='center',warning=FALSE, message=FALSE}

lambda <- 3.61/S_d #sigma1/sigma0

# Desajuste no desvio

Pdr<-function(n,lambda){

  Pdr<-1-ptukey((d2(n)+3*d3(n))*1/lambda, nmeans=n, df=Inf)
  return(Pdr)

}

Pdr(n,lambda)

```

### (e)

A probabilidade de descobrirmos a mudança no desvio-padrão (para 3,61) com o gráfico da média na primeira amostra é de 12%.

```{r, echo = TRUE, fig.align='center',warning=FALSE, message=FALSE}

# Desajuste no desvio - grafico poder de X completo
# Captura desajustes na media e no desvio padrao

lambda<- 3.61/S_d #sigma1/sigma0
delta<- 0

Pdx_<-function(k,delta,lambda,n){
  
  Pdx<-pnorm(-(k+delta*sqrt(n))/lambda)+pnorm(-(k-delta*sqrt(n))/lambda)
  
  return(Pdx)
  
}

Pdx_(k,delta,lambda,n)

```
### (f)

Caso também haja um deslocamento de 6 unidades da média, a probabilidade de detecção com o gráfico de $\bar{X}$ é de 20%.

```{r, echo = TRUE, fig.align='center',warning=FALSE, message=FALSE}

lambda<- 3.61/S_d #sigma1/sigma0
delta<- (6-X_barbar)/S_d

Pdx_<-function(k,delta,lambda,n){
  
  Pdx<-pnorm(-(k+delta*sqrt(n))/lambda)+pnorm(-(k-delta*sqrt(n))/lambda)
  
  return(Pdx)
  
}

Pdx_(k,delta,lambda,n)

```

## Atividade 06

### (a)

```{r, echo = FALSE, fig.align='center',warning=FALSE, message=FALSE}

rm(list=ls())
data<-read.table("C:\\Users\\55229\\Desktop\\faculdade\\Controle de Qualidade\\dados\\Tab3.20.txt", dec=",",header=TRUE)
data<-data[,-1]

n<-3
k<-3 # 3 sigma

data$R<-apply(data,1,function(x)max(x)-min(x))
data$X_bar<-apply(data[,-4],1,mean)

R_bar <- mean(data$R)
S_d  <- R_bar/d2(n)
LSC_R <- S_d*(d2(n)+k*d3(n))
LM_R<-R_bar
LIC_R <- ifelse((d2(n)-k*d3(n))<0,0,S_d*(d2(n)-k*d3(n)))

X_barbar<-mean(data$X_bar)
LSC_X_bar<-X_barbar + k*S_d/sqrt(n)
LM_X<-X_barbar
LIC_X_bar<-X_barbar - k*S_d/sqrt(n)

cat("Limites para X_barra: \n")
cat("LIC: ", LIC_X_bar, "\n")
cat("LM: ", X_barbar, "\n")
cat("LSC: ", LSC_X_bar,"\n")

cat("Limites para R: \n")
cat("LIC: ", LIC_R, "\n")
cat("LM: ", R_bar, "\n")
cat("LSC: ", LSC_R,"\n")

par(mfrown=c(1,2))
hist(data$X_bar, col='#FFF1F9', freq=FALSE, main = "Distribuição de X_barra")
hist(data$R, col='#FFF1F9', freq=FALSE, main = "Distribuição de R")


```



### (b)

A probabilidade do gráfico da média sinalizar o desajuste (deslocamento da média para 250.8) é de 9%. A probabilidade do gráfico da amplitude sinalizar o desajuste é 0, pois ele não leva em consideração a média da amostra, apenas seus valores máximo e mínimo. 

```{r, echo = TRUE, fig.align='center',warning=FALSE, message=FALSE}

# PODER DO GRÁFICO DA MEDIA ----------------------------------------------------

lambda<- 1 # sigma1/sigma0
# desvio padrao do processo nao se alterou
delta<- (250.8-X_barbar)/S_d

Pdx_<-function(k,delta,lambda,n){
  
  Pdx<-pnorm(-(k+delta*sqrt(n))/lambda)+pnorm(-(k-delta*sqrt(n))/lambda)
  
  return(Pdx)
  
}

Pdx_(k,delta,lambda,n)

Pdr<-function(n,lambda){

  Pdr<-1-ptukey((d2(n)+3*d3(n))*1/lambda, nmeans=n, df=Inf)
  return(Pdr)

}

Pdr(n,1)


```

### (c)

A probabilidade do gráfico da média detectar o desajuste é de 20%. Já a probabilidade do gráfico da amplitude sinalizar o desajuste é de 12%. A probabilidade conjunta é dada pela soma das probabilidades individuais: 32%.

```{r, echo = TRUE, fig.align='center',warning=FALSE, message=FALSE}

# GRAFICO X_BARRA --------------------------------------------------------------

lambda<- 1.5/S_d # sigma1/sigma0
# desvio padrao do processo nao se alterou
delta<- (250.8-X_barbar)/S_d

Pdx_<-function(k,delta,lambda,n){
  
  Pdx<-pnorm(-(k+delta*sqrt(n))/lambda)+pnorm(-(k-delta*sqrt(n))/lambda)
  
  return(Pdx)
  
}

Pdx_(k,delta,lambda,n)


# GRAFICO R --------------------------------------------------------------------

lambda<- 1.5/S_d # sigma1/sigma0

Pdr<-function(n,lambda){

  Pdr<-1-ptukey((d2(n)+3*d3(n))*1/lambda, nmeans=n, df=Inf)
  return(Pdr)

}

Pdr(n,lambda)


```
### (d)

A probabilidade do gráfico de $\bar{X}$ sinalizar o desajuste é de 1%.

$$P(\bar{X}>LSC_{\bar{X}})$$
$$P(\bar{X}>\mu_0+k*\sigma_0/n)$$
$$P(\frac{\bar{X}-\mu_0}{\sigma_0/n} > \frac{\mu_0+k*\sigma_0/n - \mu_0}{\sigma_0/n})$$
$$P(\frac{\bar{X}-\mu_0}{\sigma_0/n} > k)$$

$$\text{Se } P_d = 0.001 \text{, então } $$

$$0.001 = 2 \times P(Z<-k)$$
$$0.0005 = P(Z < -k)$$
$$ k = \text{qnorm(0.0005) = 3.29}$$

```{r, echo = TRUE, fig.align='center',warning=FALSE, message=FALSE}

# GRAFICO X_BARRA --------------------------------------------------------------

k<-abs(qnorm(0.001/2))
lambda<- (1.3*S_d)/S_d # sigma1/sigma0
delta<- 0

Pdx_<-function(k,delta,lambda,n){
  
  Pdx<-pnorm(-(k+delta*sqrt(n))/lambda)+pnorm(-(k-delta*sqrt(n))/lambda)
  
  return(Pdx)
  
}

Pdx_(k,delta,lambda,n)


```

## Atividade 07

### (a)

```{r, echo = FALSE, fig.align='center',warning=FALSE, message=FALSE}

rm(list=ls())
data<-read.table("C:\\Users\\gabriela.silva\\Desktop\\faculdade\\cq\\Dados\\Tab3.24.txt", dec=",",header=TRUE)

n<-6
k<-3 # afastamento da media considerado para os limites de qualidade
mu_hat<-mean(data$X_bar)
sigma_hat<- mean(data$R)/IQCC::d2(n)

LSC_X_bar<-mu_hat + k*sigma_hat/sqrt(n)
LIC_X_bar<-mu_hat - k*sigma_hat/sqrt(n)

cat("Limites para X_barra: \n")
cat("LIC: ", LIC_X_bar, "\n")
cat("LM: ", mu_hat, "\n")
cat("LSC: ", LSC_X_bar,"\n", "\n")

R_bar <- mean(data$R)
S_d  <- R_bar/d2(n)
LSC_R <- S_d*(d2(n)+k*d3(n))
LIC_R <- ifelse((d2(n)-k*d3(n))<0,0,S_d*(d2(n)-k*d3(n)))

cat("Limites para R: \n")
cat("LIC: ", LIC_R, "\n")
cat("LM: ", R_bar, "\n")
cat("LSC: ", LSC_R,"\n")


```

### (b)

```{r, echo = TRUE, fig.align='center',warning=FALSE, message=FALSE}

# GRAFICO X_BARRA --------------------------------------------------------------

lambda<- 1 # sigma1/sigma0
delta<- (268 - mu_hat)/sigma_hat

Pdx_<-function(k,delta,lambda,n){
  
  Pdx<-pnorm(-(k+delta*sqrt(n))/lambda)+pnorm(-(k-delta*sqrt(n))/lambda)
  
  return(Pdx)
  
}

Pdx<-Pdx_(k,delta,lambda,n) # poder
cat("Poder da carta de X_barra: ",Pdx,"\n")


# GRAFICO R --------------------------------------------------------------------

lambda<- 1 # sigma1/sigma0

Pdr_<-function(n,lambda){

  Pdr<-1-ptukey((d2(n)+3*d3(n))*1/lambda, nmeans=n, df=Inf)
  return(Pdr)

}

Pdr<-Pdr_(n,lambda)
cat("Poder da carta de R: ",Pdr,"\n")

# GRAFICO CONJUNTO X_BARRA + R -------------------------------------------------

Pd<-function(Pdx,Pdr){
 return(Pdx + Pdr - Pdx*Pdr)
}
Pd.conj<-Pd(Pdx, Pdr)
cat("Poder Conjunto: ",Pd.conj,"\n")



Prob<-1-pgeom(4,prob = Pd.conj) # 1 menos a probabilidade do grafico sinalizar
#a alteracao em ate quatro dias
cat("Probabilidade do grafico conj. sinalizar a alteração: ", Prob, "\n")

```
### (c)


```{r, echo = FALSE, fig.align='center',warning=FALSE, message=FALSE}


n<-12

LSC_X_bar<-mu_hat + k*sigma_hat/sqrt(n)
LIC_X_bar<-mu_hat - k*sigma_hat/sqrt(n)

cat("Limites para X_barra: \n")
cat("LIC: ", LIC_X_bar, "\n")
cat("LM: ", mu_hat, "\n")
cat("LSC: ", LSC_X_bar,"\n","\n")

R_bar <- mean(data$R)
S_d  <- R_bar/d2(n)
LSC_R <- S_d*(d2(n)+k*d3(n))
LIC_R <- ifelse((d2(n)-k*d3(n))<0,0,S_d*(d2(n)-k*d3(n)))

cat("Limites para R: \n")
cat("LIC: ", LIC_R, "\n")
cat("LM: ", R_bar, "\n")
cat("LSC: ", LSC_R,"\n")


```

### (d)

O tempo médio para detecção de alteração na média do processo é de 2,7 dias quando são feitas 2 amostras de tamanho n=6 por dia; e de 1,7 dias quando é feita uma amostra de tamanho n=12 por dia. 

```{r, echo = TRUE, fig.align='center',warning=FALSE, message=FALSE}

TMA<-function(h,Pd){
  
  h*(1/Pd-1/2)
}

h<-0.5 # tempo entre amostras (dias)
cat("TMA (dias) para 2 amostras de tamanho n=6: ", TMA(h,Pd.conj))

n<-12
Pdx<-Pdx_(k,delta,lambda,n)
Pdr<-Pdr_(n,lambda)
Pd.conj<-Pd(Pdx, Pdr)

h<-1
cat("TMA (dias) para 1 amostra de tamanho n=12: ", TMA(h,Pd.conj))


```
## Atividade 08

### (a)

O gráfico de $\bar{X}$ não acusou pontos fora dos limites de controle de qualidade. O gráfico de $\bar{R}$, por outro lado, acusou apenas um ponto (uma amostra). Essa amostra, quando retirada, resulta em um gráfico sem pontos fora dos limites de controle - logo, o processo pode ser considerado sob controle. 

```{r, echo = FALSE, fig.align='center',warning=FALSE, message=FALSE}

rm(list=ls())
data1<-read.table("C:\\Users\\gabriela.silva\\Desktop\\faculdade\\cq\\Dados\\Tab6E.12.txt", dec=",",header=TRUE)

invisible(qcc(data1, type = "xbar"))
invisible(qcc(data1, type = "R"))
invisible(qcc(data1[-9,], type = "R", main = "R Chart sem a Amostra 09"))



```

### (b)

O processo aparentemente estava fora de controle no momento de coleta dos 15 novos subgrupos. Ocorreu tanto deslocamentos da média como aumento da amplitude do processo.

```{r, echo = FALSE, fig.align='center',warning=FALSE, message=FALSE}

data2<-read.table("C:\\Users\\gabriela.silva\\Desktop\\faculdade\\cq\\Dados\\Tab6E.13.txt", dec=",",header=TRUE)

invisible(qcc(data1, type = "xbar", newdata=data2))
invisible(qcc(data1[-9,], type = "R", newdata=data2))

```
### (c)

O gráfico evidencia que, em adição a deslocamentos da média e aumento da amplitude do processo, também houve aumento da variabilidade do processo (considerando os novos 15 subgrupos), o que evidencia instabilidade da produção a partir do vigésimo primeiro procedimento de amostragem.

```{r, echo = FALSE, fig.align='center',warning=FALSE, message=FALSE}

invisible(qcc(data1[-9,], type = "S", newdata=data2))

```

### (d)

Sim, o gráfico de S detecta o deslocamento a partir da 21ª amostra, enquanto que o gráfico de R detecta apenas a partir da 24ª amostra.

## Atividade 09

### (a)

Sim, o processo parece estar sob controle, tanto do ponto de vista da carta de $\bar{X}$ quanto de $R$ (não há pontos fora dos limites de controle).  

```{r, echo = FALSE, fig.align='center',warning=FALSE, message=FALSE}

rm(list=ls())
data<-read.table("C:\\Users\\gabriela.silva\\Desktop\\faculdade\\cq\\Dados\\Tab6E.6.txt", dec=",",header=TRUE)

invisible(qcc(data, type = "xbar"))
invisible(qcc(data, type = "S"))


```

### (b) 

Os gráficos de S e R são bem semelhantes, provavelmente isso se deve ao fato das amostras serem pequenas (n= 10). 

```{r, echo = FALSE, fig.align='center',warning=FALSE, message=FALSE}

invisible(qcc(data, type = "S"))

```

### (c) 

O gráfico de $S^2$ acusa dois pontos (duas amostras, 5 e 10, respectivamente) fora dos limites de qualidade; diferentemente do gráfico de $S$, que não acusa nenhum problema. 

```{r, echo = FALSE, fig.align='center',warning=FALSE, message=FALSE}

invisible(qcc(data^2, type = "S", title="S^2 Chart"))

```
## Atividade 10

Para n=5, obtivemos um poder de 41% pela carta de R e de 93% pela carta de S. 

Para n=10, obtivemos um poder de 64% pela carta de R e de 99% pela carta de S. 

Para n=15, obtivemos um poder de 78% pela carta de R e de 99% pela carta de S.

```{r, echo = TRUE, fig.align='center',warning=FALSE, message=FALSE}

rm(list=ls())
data0<-read.table("C:\\Users\\gabriela.silva\\Desktop\\faculdade\\cq\\Dados\\Tab3.24.txt", dec=",",header=TRUE)

n<-5
data<-data0[1:n,]
k<-3 # afastamento da media considerado para os limites de qualidade
mu_hat<-mean(data$X_bar)
sigma_hat<- mean(data$R)/IQCC::d2(n)


# GRAFICO R --------------------------------------------------------------------

lambda<- 2*sigma_hat/sigma_hat # sigma1/sigma0

Pdr<-function(n,lambda){

  Pdr<-1-ptukey((d2(n)+3*d3(n))*1/lambda, nmeans=n, df=Inf)
  return(Pdr)

}

cat("Poder R, n=5: ", Pdr(n,lambda),"\n")


# GRAFICO S --------------------------------------------------------------------

Pds_<- function(n,sigma){
  
  q<-(c4(n)^2*sigma^2-4*sigma+4*c4(n)^2*sigma)/sigma^2
  
  return(1-pchisq(q,n-1))
  
}

cat("Poder S, n=5: ", Pds_(n,sigma_hat),"\n", "\n")

```
```{r, echo = TRUE, fig.align='center',warning=FALSE, message=FALSE}

n<-10
data<-data0[1:n,]
k<-3 # afastamento da media considerado para os limites de qualidade
mu_hat<-mean(data$X_bar)
sigma_hat<- mean(data$R)/IQCC::d2(n)


# GRAFICO R --------------------------------------------------------------------

lambda<- 2*sigma_hat/sigma_hat # sigma1/sigma0

Pdr<-function(n,lambda){

  Pdr<-1-ptukey((d2(n)+3*d3(n))*1/lambda, nmeans=n, df=Inf)
  return(Pdr)

}

cat("Poder R, n=10: ", Pdr(n,lambda),"\n")


# GRAFICO S --------------------------------------------------------------------

Pds_<- function(n,sigma){
  
  q<-(c4(n)^2*sigma^2-4*sigma+4*c4(n)^2*sigma)/sigma^2
  
  return(1-pchisq(q,n-1))
  
}

cat("Poder S, n=10: ", Pds_(n,sigma_hat),"\n", "\n")

```

```{r, echo = FALSE, fig.align='center',warning=FALSE, message=FALSE}

n<-15
data<-data0[1:n,]
k<-3 # afastamento da media considerado para os limites de qualidade
mu_hat<-mean(data$X_bar)
sigma_hat<- mean(data$R)/IQCC::d2(n)


# GRAFICO R --------------------------------------------------------------------

lambda<- 2*sigma_hat/sigma_hat # sigma1/sigma0

Pdr<-function(n,lambda){

  Pdr<-1-ptukey((d2(n)+3*d3(n))*1/lambda, nmeans=n, df=Inf)
  return(Pdr)

}

cat("Poder R, n=15: ", Pdr(n,lambda),"\n")


# GRAFICO S --------------------------------------------------------------------

Pds_<- function(n,sigma){
  
  q<-(c4(n)^2*sigma^2-4*sigma+4*c4(n)^2*sigma)/sigma^2
  
  return(1-pchisq(q,n-1))
  
}

cat("Poder S, n=15: ", Pds_(n,sigma_hat),"\n", "\n")

```
